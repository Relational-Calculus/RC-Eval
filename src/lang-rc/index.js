import { LRParser } from '@lezer/lr';
import { LRLanguage, indentNodeProp, delimitedIndent, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_word = {__proto__:null,CNT:24, AVG:26, MAX:28, MIN:30, SUM:32, "∧":38, AND:40, "∨":42, OR:44, "⇒":46, IMPLIES:48, "∃":52, EXISTS:54, "∀":58, FORALL:60, "¬":62, NOT:64, LET:66, IN:68};
const parser = LRParser.deserialize({
  version: 14,
  states: "*zQVQPOOO}QPO'#C_O!YOQO'#C`O!hOSO'#C`O!vQPO'#C^O#OQPO'#C^O#TQPO'#CcOOQO'#DW'#DWOVQPO'#DWQ#YQPOOOVQPO'#DWO#nQPO'#CuOOQO'#Cu'#CuO#sQPO'#DWOOOO'#DP'#DPO$kOQO,58zOOQO,58z,58zOOOO'#DQ'#DQO$yOSO,58zO%XQPO,58xO%jQPO,59RO%{QPO,58}O&ZQPO,59rOVQPO,59rOOQO'#Cn'#CnO&hQPO,59rOOQO'#C_'#C_O&oQPO'#CmO'mQPO,59aO'rQWO,59rOOOO-E6}-E6}OOQO1G.f1G.fOOOO-E7O-E7OO(bQPO1G.dO(oQPO1G.dO#nQPO1G.mO(}QPO'#CfO)VQPO1G.iOOQO1G/^1G/^O#nQPO'#DSO)[QPO,59XOOQO1G.{1G.{O*YQWO,59rOVQPO1G/^O*aQPO7+$OO*}QPO7+$OO+[QPO7+$XO,VQPO'#DRO,eQPO,59QOOQO7+$T7+$TOOQO,59n,59nOOQO-E7Q-E7QO,mQWO1G.dO,tQPO7+$xOOQO<<Gj<<GjO,{QPO<<GjO#nQPO<<GsOOQO,59m,59mOOQO-E7P-E7PO-QQWO7+$OOVQPO<<HdOOQOAN=UAN=UOOQOAN=_AN=_O-XQPOAN>OO-fQWOAN>OO#sQPO'#DWO-mQPO,58xO#sQPO,59rO.OQPO1G.dO#sQPO<<HdO.^QPO'#C^O.fQPO'#C^O.kQPO7+$xOVQPO1G/^O.rQWO,59rO#sQPO'#DW",
  stateData: ".y~OyOS~OXYOjZOkZOmZOnZOo[Op[Oq]O{PO|QO!PRO!RTO~OXWX!SRX!VRX~OT^O|`O}^O!O`O~OTaO!O`O!P`O!QaO~O!ScO!VdO~O!ScO~OXeO~OchOdhOehOfhOghOhhO~O{jO~OXYOjZOkZOmZOnZOo[Op[Oq!mO{PO|QO!PRO!R!iO~OT^O|oO}^O!OoO~OTaO!OoO!PoO!QaO~O{jO|QO!PRO!RqO!SrO~O[sO]sO^sO_sO`sO~O{jO|QO!PRO!RtO~OwzaUzarza~P#YOUvO~P#YO!UwOlaXXaXjaXkaXmaXnaXoaXpaXqaX{aX|aX!PaX!RaX~OlyO~O!X{O~P#YO!T|OcQidQieQifQigQihQi~OwQiUQirQi~P'yO{jO|QO!PRO!R}O~O!U!POUYX~OU!RO~O!UwOlaaXaajaakaamaanaaoaapaaqaa{aa|aa!Paa!Raa~O!Xza~P#YO!R!WO~O!T!XOcQqdQqeQqfQqgQqhQq~OwQqUQqrQq~P*fO!W!YOXZqjZqkZqmZqnZqoZqpZqqZq{Zq|Zq!PZq!RZq~O{jO|QO!PRO!R!ZO~O!U!POUYa~O!XQi~P'yOr!^O~P#YO!R!_O~O!XQq~P*fOwz!RUz!Rrz!R~P#YO!Xz!R~P#YO{jO|QO!PRO!R!UO!S!fO~O{jO|QO!PRO!R!]O~O!S!dO!VdO~O!S!dO~Or!gO~P#YO!X!kO~P#YO",
  goto: "&a{PP|![#YPP|#|P$[$_PPPPP$o$uPPPPPP$_PPPPPPPPP%T%Z%a%gPPP%miVOWY]g{!^!c!e!g!k!m^SOWYg{!^!kSkZ!YQqcQteQ}rQ!OsQ!SwQ!U!dQ!Z!PQ!]!fZ!h]!c!e!g!m^TOWYg{!^!kQqcQteQ}rQ!U!dQ!Z!PQ!]!fZ!i]!c!e!g!miUOWY]g{!^!c!e!g!k!mRue^WOWYg{!^!kZ!c]!c!e!g!mQlZR!`!Y[gXfi!V!a!jX!emz!b!lQ_QRn_QbRRpbQ!QtR![!QQxkR!TxQXOQfWQiYQm]Svg!eQz!cQ!V{Q!a!^Q!b!gQ!j!kR!l!m",
  nodeNames: "⚠ Program EqualsExpression Identifier String Escape ) TableExpression TableName ( varList AggregateExpression CNT AVG MAX MIN SUM varList InfixExpression ∧ AND ∨ OR ⇒ IMPLIES PrefixExpression ∃ EXISTS . ∀ FORALL ¬ NOT LET IN",
  maxTerm: 55,
  skippedNodes: [0],
  repeatNodeCount: 4,
  tokenData: "4f~R!ROX$[XY&bYZ'{Z]$[]^&b^p$[pq&bqr$[rs(`sw$[wx(yxy)dyz*Yz{+O{|+O|}+t}!O+O!O!P,j!P!Q$[!Q![-`![!]$[!]!^.[!^!_/Q!_!`0r!`!a1j!a!c$[!c!}2`!}#O$[#O#P4a#P#R$[#R#S2`#S#T$[#T#o2`#o$r$[$r$s2`$s%%Y$[%%Y%%Z2`%%Z%&Y$[%&Y%&Z2`%&Z%&]$[%&]%&^2`%&^%'R$[%'R%'S2`%'S%'T2`%'T%'t$[%'t%'u1j%'u;'S$[;'S;=`&[<%lO$[U$cX}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[S%TU!QSOY%OZw%Ox#O%O#P;'S%O;'S;=`%g<%lO%OS%jP;=`<%l%OQ%rU}QOY%mZr%ms#O%m#P;'S%m;'S;=`&U<%lO%mQ&XP;=`<%l%mU&_P;=`<%l$[_&k_yX}Q!QSOX$[XY&bYZ'jZ]$[]^&b^p$[pq&bqr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[X'oSyXXY'jYZ'j]^'jpq'j_(SS!OUyXXY'jYZ'j]^'jpq'jV(gU|R!QSOY%OZw%Ox#O%O#P;'S%O;'S;=`%g<%lO%OV)QU!PT}QOY%mZr%ms#O%m#P;'S%m;'S;=`&U<%lO%mV)mXXP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[V*cXUP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[_+XX!TX}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[V+}X!UP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[V,sXlP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[V-iZ!RP}Q!QSOY$[Zr$[rs%Osw$[wx%mx!Q$[!Q![-`![#O$[#P;'S$[;'S;=`&[<%lO$[V.eX!WP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[V/ZZ!SP}Q!QSOY$[Zr$[rs%Osw$[wx%mx}$[}!O/|!O#O$[#P;'S$[;'S;=`&[<%lO$[V0VX!VP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[_0}X!XW!SP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[V1sX!SP}Q!QSOY$[Zr$[rs%Osw$[wx%mx#O$[#P;'S$[;'S;=`&[<%lO$[_2il}Q!QS{XOY$[Zr$[rs%Osw$[wx%mx!Q$[!Q![2`![!c$[!c!}2`!}#O$[#P#R$[#R#S2`#S#T$[#T#o2`#o$r$[$r$s2`$s%%Y$[%%Y%%Z2`%%Z%&Y$[%&Y%&Z2`%&Z%&]$[%&]%&^2`%&^%'R$[%'R%'S2`%'S%'T2`%'T;'S$[;'S;=`&[<%lO$[~4fOT~",
  tokenizers: [0, 1, 2, 3],
  topRules: {"Program":[0,1]},
  specialized: [{term: 43, get: (value) => spec_word[value] || -1}],
  tokenPrec: 0
});

const RCLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            indentNodeProp.add({
                Application: delimitedIndent({ closing: ")", align: false })
            }),
            styleTags({
                // identifier: t.string,
                "AND ∧ OR ∨ IMPLIES ⇒ EXISTS ∃ FORALL ∀ NOT ¬ CNT SUM MAX MIN AVG": tags.operatorKeyword,
                "LET IN": tags.modifier,
                TableName: tags.definitionKeyword,
                Identifier: tags.variableName,
                String: tags.string,
                "( )": tags.paren
            })
        ]
    })
});
function RC() {
    return new LanguageSupport(RCLanguage);
}

export { RC, RCLanguage };
